# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  test-each-package:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        package:
          - turu-core
          - turu-sqlite3
          - turu-mysql
          - turu-postgres
          - turu-snowflake
          - turu-bigquery
          - .
        install-flags:
          - ""
          - "--all-extras"
    defaults:
      run:
        working-directory: ${{ matrix.package }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Poetry Version
        run: |
          poetry --version
      - name: Poetry Install Dependencies
        run: |
          poetry install --no-interaction ${{ matrix.install-flags }}
      - name: Lint
        run: |
          poetry run task format --diff
      - name: Lint
        run: |
          poetry run task lint --diff --output-format=github
      - name: Typecheck
        run: |
          poetry run task typecheck
      - name: Test
        run: |
          poetry run task test

  test:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [test-each-package]
    steps:
      - run: "[[ ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }} = false ]]"
